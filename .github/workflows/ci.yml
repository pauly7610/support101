name: CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.11]
        node-version: [22.x]
    steps:
      - uses: actions/checkout@v4

      # Python backend setup
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Cache Python venv
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-
      - name: Install backend dependencies
        run: |
          pip install -r apps/backend/requirements.txt

      - name: Lint backend
        run: |
          pip install flake8
          flake8 apps/backend

      - name: Check backend components
        run: |
          test -f apps/backend/migrations.py
          test -f packages/llm_engine/chains/rag_chain.py
      - name: Add project root to PYTHONPATH
        run: echo "PYTHONPATH=$PYTHONPATH:$(pwd)" >> $GITHUB_ENV
      - name: Test backend
        run: |
          pytest apps/backend/tests

      # Node.js frontend setup
      - name: Set up Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}

      - name: Install frontend dependencies
        run: |
          cd apps/agent-copilot && npm install
          cd ../customer-bot && npm install

      - name: Lint frontends
        run: |
          cd apps/agent-copilot && npx eslint .
          cd ../customer-bot && npx eslint .

      - name: Test frontends (if tests exist)
        run: |
          cd apps/agent-copilot && if [ -d "__tests__" ]; then npm test; fi
          cd ../customer-bot && if [ -d "__tests__" ]; then npm test; fi
